# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3'

# Define services
services:

  # App Service
  app:
    # Configuration for building the docker image for the service
    build:
      context: . # Use an image built from the specified dockerfile in the current directory.
      dockerfile: docker/app/dev.Dockerfile
    ports:
      - "80:80" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: unless-stopped
    volumes:
      - ./:/app
    depends_on:
      - redis # This service depends on redis. Start that first.
      - db
    environment: # Pass environment variables to the service
      REDIS_URL: redis:6379
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
    container_name: wallche_api

  # Redis Service
  redis:
    image: "redis:alpine3.12" # Use a public Redis image to build the redis service
    container_name: wallche_redis
    restart: unless-stopped
    networks:
      - backend
  db:
    image: mariadb:10.5.8-focal
    container_name: wallche_db
    restart: unless-stopped
    volumes:
    - ./docker/db/data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: secretz
      MYSQL_DATABASE: wallche
      MYSQL_USER: wallche
      MYSQL_PASSWORD: wallchepass
    networks:
      - backend

  adminer:
    image: adminer
    container_name: wallche_adminer
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - backend
    ports:
      - 8080:8080
    environment:
      ADMINER_DESIGN: 'pepa-linha'
      MYSQL_ROOT_PASSWORD: secretz

networks:
  backend: